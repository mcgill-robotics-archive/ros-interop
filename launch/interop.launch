<launch>
  <!-- Node namespace -->
  <arg name="ns" default="interop" doc="namespace for all nodes"/>

  <!-- Login credentials and request parameters -->
  <arg name="base_url" default="$(optenv INTEROP_HOST)"
    doc="base URL of the interop server (e.g. http://localhost:8080)"/>
  <arg name="timeout" default="1.0" doc="timeout of each request in seconds"/>
  <arg name="verify" default="true" doc="validate SSL certificates"/>

  <!-- Targets directory settings -->
  <arg name="targets_root"
    default="$(optenv INTEROP_OBJECTS_ROOT ~/object_files/)"
    doc="path to save object files in"/>
  <arg name="interop_update_period" default="10.0"
    doc="period to update targets with the server in seconds"/>

  <!-- Synchronization settings -->
  <arg name="sync_queue_size" default="2"
    doc="message synchronization queue size"/>
  <arg name="max_sync_delay" default="1"
    doc="maximum message synchronization delay in seconds"/>

  <!-- Subscribed topics -->
  <arg name="navsat_topic" default="/mavros/global_position/global"
    doc="topic for vehicle's GPS position to use for telemetry"/>
  <arg name="compass_topic" default="/mavros/global_position/compass_hdg"
    doc="topic for vehicle's compass heading in degrees"/>

  <!-- Published topics -->
  <arg name="moving_topic" default="~moving"
    doc="topic for publishing moving obstacles"/>
  <arg name="stationary_topic" default="~stationary"
    doc="topic for publishing stationary obstacles"/>
  <arg name="flyzones_topic" default="~flyzones"
    doc="topic for publishing flyzones"/>
  <arg name="search_grid_topic" default="~search_grid"
    doc="topic for publishing search grid"/>
  <arg name="waypoints_topic" default="~waypoints"
    doc="topic for publishing waypoints"/>
  <arg name="air_drop_topic" default="~air_drop_loc"
    doc="topic for publishing air drop location"/>
  <arg name="emergent_targ_topic" default="~emergent_targ_loc"
    doc="topic for publishing emergent target location"/>
  <arg name="off_axis_targ_topic" default="~off_axis_targ"
    doc="topic for publishing off axis target location"/>
  <arg name="home_pos_topic" default="~home"
    doc="topic for publishing home location"/>

  <!-- Publication periods -->
  <arg name="obstacles_period" default="0.05"
    doc="period to fetch obstacles in seconds"/>
  <arg name="mission_info_period" default="1.00"
    doc="period to fetch mission information in seconds"/>

  <!-- Frame IDs -->
  <arg name="obstacles_frame" default="earth" doc="obstalces frame ID"/>
  <arg name="missions_frame" default="earth"
    doc="mission information frame ID"/>

  <!-- Mission ID -->
  <arg name="mission_id" default="-1" doc="mission ID (-1 means active)"/>

  <group ns="$(arg ns)">
    <!-- Obstacles client -->
    <node name="obstacles"
          pkg="interop"
          type="obstacles_client.py"
          output="screen"
          respawn="true">
      <!-- Login credentials and request parameters -->
      <param name="base_url" value="$(arg base_url)" type="str"/>
      <param name="timeout" value="$(arg timeout)" type="double"/>
      <param name="verify" value="$(arg verify)" type="bool"/>

      <!-- Published topics -->
      <param name="moving_topic" value="$(arg moving_topic)"/>
      <param name="stationary_topic" value="$(arg stationary_topic)"/>

      <!-- Publication period -->
      <param name="period" value="$(arg obstacles_period)"/>

      <!-- Frame ID -->
      <param name="frame" value="$(arg obstacles_frame)"/>
    </node>

    <!-- Mission Information Client -->
    <node name="mission_info"
          pkg="interop"
          type="missions_client.py"
          output="screen"
          respawn="true">
      <!-- Login credentials and request parameters -->
      <param name="base_url" value="$(arg base_url)" type="str"/>
      <param name="timeout" value="$(arg timeout)" type="double"/>
      <param name="verify" value="$(arg verify)" type="bool"/>

      <!-- Published topics -->
      <param name="flyzones_topic" value="$(arg flyzones_topic)"/>
      <param name="search_grid_topic" value="$(arg search_grid_topic)"/>
      <param name="waypoints_topic" value="$(arg waypoints_topic)"/>
      <param name="air_drop_loc_topic" value="$(arg air_drop_topic)"/>
      <param name="emergent_targ_topic" value="$(arg emergent_targ_topic)"/>
      <param name="off_axis_targ_topic" value="$(arg off_axis_targ_topic)"/>
      <param name="home_pos_topic" value="$(arg home_pos_topic)"/>

      <!-- Publication period -->
      <param name="period" value="$(arg mission_info_period)"/>

      <!-- Frame ID -->
      <param name="frame" value="$(arg missions_frame)"/>

      <!-- Mission ID -->
      <param name="id" value="$(arg mission_id)"/>
    </node>

    <!-- Telemetry client -->
    <node name="telemetry"
          pkg="interop"
          type="telemetry_client.py"
          output="screen"
          respawn="true">
      <!-- Login credentials and request parameters -->
      <param name="base_url" value="$(arg base_url)" type="str"/>
      <param name="timeout" value="$(arg timeout)" type="double"/>
      <param name="verify" value="$(arg verify)" type="bool"/>

      <!-- Synchronization settings -->
      <param name="sync_queue_size" value="$(arg sync_queue_size)"/>
      <param name="max_sync_delay" value="$(arg max_sync_delay)"/>

      <!-- Subscribed topics -->
      <param name="navsat_topic" value="$(arg navsat_topic)"/>
      <param name="compass_topic" value="$(arg compass_topic)"/>
    </node>

    <!-- Target client -->
    <node name="targets"
          pkg="interop"
          type="targets_server.py"
          output="screen"
          respawn="true">
      <!-- Login credentials and request parameters -->
      <param name="base_url" value="$(arg base_url)" type="str"/>
      <param name="timeout" value="$(arg timeout)" type="double"/>
      <param name="verify" value="$(arg verify)" type="bool"/>

      <!-- Targets directory settings -->
      <param name="targets_root" value="$(arg targets_root)"/>
      <param name="interop_update_period" value="$(arg interop_update_period)"/>
    </node>
  </group>
</launch>
